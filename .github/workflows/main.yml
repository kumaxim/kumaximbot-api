name: Yandex Function

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for triggering the workflow'
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - ".idea/**"

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download assets
      uses: keithweaver/aws-s3-github-action@v1.0.0
      with:
        command: cp
        source: s3://${{ vars.PROJECT_SLUG }}
        destination: './assets/'
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: us-east-1
        flags: '--recursive --endpoint-url=https://storage.yandexcloud.net'

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: '1.8.3'

    - name: Install project
      run: poetry install --no-interaction

    - name: Apply migrations
      env:
        BOT_TOKEN: "any"
        TELEGRAM_SECRET_TOKEN: "any"
        YANDEX_OAUTH_CLIENT_ID: "any"
        YANDEX_OAUTH_CLIENT_SECRET: "any"
        PRIVILEGED_USER_LOGIN: "any"
      run:
        poetry run alembic upgrade head

    - name: Export requirements.txt
      run: poetry export -o requirements.txt --without-hashes --without=dev

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      env:
        TF_VAR_BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        TF_VAR_PRIVILEGED_USER_LOGIN: ${{ secrets.PRIVILEGED_USER_LOGIN }}
        TF_VAR_SERVICE_ACCOUNT_ID: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
        TF_VAR_TELEGRAM_SECRET_TOKEN: ${{ secrets.TELEGRAM_SECRET_TOKEN }}
        TF_VAR_YANDEX_OAUTH_CLIENT_ID: ${{ secrets.YANDEX_OAUTH_CLIENT_ID }}
        TF_VAR_YANDEX_OAUTH_CLIENT_SECRET: ${{ secrets.YANDEX_OAUTH_CLIENT_SECRET }}
        YC_CLOUD_ID: ${{ secrets.YC_CLOUD_ID }}
        YC_FOLDER_ID: ${{ secrets.YC_FOLDER_ID }}
        YC_SERVICE_ACCOUNT_KEY_FILE: ${{ secrets.YC_SERVICE_ACCOUNT_KEY_FILE }}
      with:
        terraform_version: 1.9.6

    - id: init
      run: terraform init -no-color -backend-config="access_key=$YC_BACKEND_ACCESS_KEY" -backend-config="secret_key=$YC_BACKEND_SECRET_KEY"
      env:
        YC_BACKEND_ACCESS_KEY: ${{ secrets.YC_BACKEND_ACCESS_KEY }}
        YC_BACKEND_SECRET_KEY:  ${{ secrets.YC_BACKEND_SECRET_KEY }}

    - id: validate
      run: terraform validate -no-color

    - id: plan
      run: terraform plan -out=cf2plan -no-color

    - id: apply
      run: terraform apply cf2plan -no-color